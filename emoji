composer require cache/cache
<?php

namespace App\Service;

use GuzzleHttp\Client;
use Cache\Cache;

class IndiceCorrecaoService
{
    public function getAllIndexes($indiceSelected)
    {
        // Verifica se os dados estão em cache
        $cacheKey = 'indices-' . md5(json_encode($indiceSelected));
        $cache = Cache::fileSystem(__DIR__ . '/../../cache');
        $data = $cache->get($cacheKey);
        if ($data !== null) {
            return $data;
        }

        $year = date('Y');
        $yearAcumulado = $year - 1;

        $client = new Client();

        try {
            $url = "https://api.bcb.gov.br/dados/serie/bcdata.sgs.{$indiceSelected[0]['code']}/dados?formato=json&dataInicial=01/01/{$year}&dataFinal=31/12/{$year}";
            $response = $client->get($url);
            $num = json_decode($response->getBody(), true);
            $data['All'] = array_reverse($num, true);
            array_splice($data['All'], 1);
            $urlAcumulado = "https://api.bcb.gov.br/dados/serie/bcdata.sgs.{$indiceSelected[0]['code']}/dados?formato=json&dataInicial=01/01/{$yearAcumulado}&dataFinal=31/12/{$year}";
            $response = $client->get($urlAcumulado);
            $data['Acumulado'] = json_decode($response->getBody(), true);
            $soma = 0;
            foreach ($data['All'] as $index => $item) {
                $soma = $this->getAcumulado($soma, $item['valor']);
                $data['All'][$index]['accumulated'] = ($soma - 1) * 100;
                $data['All'][$index]['accumulated_year'] = $this->getAcumuladoYear($data['Acumulado'], $item['data']);
            }

            // Armazena os dados em cache
            $cache->set($cacheKey, $data, 3600);

            return $data['All'];
        } catch (Exception $e) {
        }
    }

    // Resto do código da classe...
}


bordas na tabela
<style>
    .table-rounded {
        border-radius: 10px;
        overflow: hidden;
    }
</style>

<table id="tabela-indice" class="table table-hover table-striped" style="width: 100%!important; align-items: center;margin: 0">
<form id="form-indice" method="POST">
<script>
  $(document).ready(function() {
    $('#form-indice').submit(function(event) {
      event.preventDefault(); // impede que o formulário seja enviado normalmente
      $.ajax({
        url: 'caminho/do/seu/script.php', // o caminho para o script PHP que buscará os novos dados
        type: 'POST',
        data: $('#form-indice').serialize(), // serializa os dados do formulário para enviá-los ao script PHP
        success: function(data) {
          $('#tabela-indice tbody').html(data); // atualiza o corpo da tabela com os novos dados retornados pelo script PHP
        },
        error: function() {
          alert('Erro ao buscar novos dados.'); // exibe uma mensagem de erro se ocorrer algum problema ao buscar os novos dados
        }
      });
    });
  });
</script>


var whatsappButton = document.getElementById("whatsapp");
var scrollToTopButton = document.getElementById("scroll-to-top");

window.addEventListener("scroll", function() {
  if (window.pageYOffset > 0) {
    whatsappButton.style.display = "none";
    scrollToTopButton.style.display = "block";
  } else {
    whatsappButton.style.display = "block";
    scrollToTopButton.style.display = "none";
  }
});



#whatsapp {
  position: fixed;
  bottom: 20px;
  right: 20px;
  z-index: 999;
}

#scroll-to-top {
  position: fixed;
  bottom: 70px;
  right: 20px;
  z-index: 999;
}


<style>
.navbar-custom {
    background-color: black !important;
}
</style>


$(document).ready(function() {
    // Event listener para quando o formulário for submetido
    $('form').submit(function(event) {
        // Previne o comportamento padrão do formulário
        event.preventDefault();
        
        // Obtém os valores dos campos código e ano
        var codigo = $('select[name=codigo]').val();
        var ano = $('select[name=ano]').val();
        
        // Faz a chamada AJAX para o arquivo PHP
        $.ajax({
            url: 'seu_arquivo_php.php',
            method: 'POST',
            data: {
                codigo: codigo,
                ano: ano
            },
            success: function(response) {
                // Atualiza a tabela com os novos dados
                $('table tbody').html(response);
            }
        });
    });
});


<head>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" integrity="sha384-yF8sP+LZOGnHCgJJnCizM59JjWydp+BWbviTnWXvXJEMmk8nLf3qLz//ZRMJfKR7" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css" integrity="sha384-3qBRp5o0lA9UW8L4c15FZxlNl+1QTLGw8RPdPfSvp/tyDnU9XpU6ezcU6eMzptZB" crossorigin="anonymous">
</head>


<div class="rating">
  <h3>Você gostou deste produto?</h3>
  <div class="emoji">
    <span class="emoji-1" data-value="1">&#x1F641;</span>
    <span class="emoji-2" data-value="2">&#x1F610;</span>
    <span class="emoji-3" data-value="3">&#x1F642;</span>
  </div>
</div>

<div class="rating">
  <h3>Você gostou disso?</h3>
  <div class="emoji">
    <span class="emoji-1" data-value="1">&#x1F641;</span>
    <span class="emoji-2" data-value="2">&#x1F610;</span>
    <span class="emoji-3" data-value="3">&#x1F642;</span>
  </div>
</div>

<div class="rating">
  <h3>Você gostou de outro?</h3>
  <div class="emoji">
    <span class="emoji-1" data-value="1">&#x1F641;</span>
    <span class="emoji-2" data-value="2">&#x1F610;</span>
    <span class="emoji-3" data-value="3">&#x1F642;</span>
  </div>
</div>
<style>
  .rating {
margin-bottom: 20px;
}

.rating h3 {
margin-bottom: 10px;
}

.emoji {
display: flex;
justify-content: space-between;
}

.emoji span {
font-size: 40px;
cursor: pointer;
}

.emoji span.selected {
font-size: 50px;
color: #FFC107;
}
</style>
<script>
  const emojis1 = document.querySelectorAll('.rating:nth-of-type(1) .emoji span');
emojis1.forEach(emoji => {
  emoji.addEventListener('click', () => {
    // remove a classe 'selected' dos emojis
    emojis1.forEach(e => e.classList.remove('selected'));
    // adiciona a classe 'selected' ao emoji clicado
    emoji.classList.add('selected');
    // obtém o valor do emoji selecionado
    const value = emoji.getAttribute('data-value');
    // envia o valor para o servidor
    fetch('https://seuservidor.com/rating1', {
      method: 'POST',
      body: JSON.stringify({ value }),
      headers: {
        'Content-Type': 'application/json'
      }
    });
  });
});

const emojis2 = document.querySelectorAll('.rating:nth-of-type(2) .emoji span');
emojis2.forEach(emoji => {
  emoji.addEventListener('click', () => {
    // remove a classe 'selected' dos emojis
    emojis2.forEach(e => e.classList.remove('selected'));
    // adiciona a classe 'selected' ao emoji clicado
    emoji.classList.add('selected');
    // obtém o valor do emoji selecionado
    const value = emoji.getAttribute('data-value');
    // envia o valor para o servidor
    fetch('https://seuservidor.com/rating2', {
      method: 'POST',
      body: JSON.stringify({ value }),
      headers: {
        'Content-Type': 'application/json'
      }
    });
  });
});

const emojis3 = document.querySelectorAll('.rating:nth-of-type(3) .emoji span');
emojis3.forEach(emoji => {
  emoji.addEventListener('click', () => {
    // remove a classe 'selected' dos emojis
    emojis3.forEach(e => e.classList.remove('selected'));
    // adiciona a classe 'selected' ao emoji clicado
emoji.classList.add('selected');
// obtém o valor do emoji selecionado
const value = emoji.getAttribute('data-value');
// envia o valor para o servidor
fetch('https://seuservidor.com/rating3', {
method: 'POST',
body: JSON.stringify({ value }),
headers: {
'Content-Type': 'application/json'
}
});
});
});

</script>
